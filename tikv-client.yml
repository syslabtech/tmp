apiVersion: v1
kind: Service
metadata:
  name: svc-app-tikvclient-go
  namespace: ns-app-tax-alpha
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: pod-app-tikv-client-go
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-app-tikvclient-go
  namespace: ns-app-tax-alpha
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pod-app-tikv-client-go
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pod-app-tikv-client-go
        ca-access-tikv: 'true'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - pod-app-tikv-client-go
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: TIKV_URL
              value: 'http://svc-app-tikv-datalayer-api-old.ns-app-tax-alpha:3000/'
          image: aipowerbot/tikvclient
          imagePullPolicy: Always
          name: app-tikvclient-go
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
